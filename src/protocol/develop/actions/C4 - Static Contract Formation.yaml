#
# Static Contract Formation Action:
#

code: C4
version: 1

metadata:
  name: StaticContractFormation
  label: Static Contract Formation
  description: "Static Contract Formation Action"

  inputs:
    - name: PartyX
      label: "Issuer or Party X Public Address"
      comments: "Any number of involved parties with this contract."

fields:
  - name: ContractName
    label: Contract Name
    description: >
        Can be any unique identifying string, including human readable names for branding/vanity purposes.
        Contract identifier (instance) is the bitcoin public address.
        If the public address is lost, then the administration will have to reissue the entire contract, Asset Definition and tokens with the new public address.
        Smart contracts can be branded and specialized to suit any terms and conditions.
    type: varchar
    # varchar size is number of bytes to serialize the size of the value
    size: 1
    example: "Tesla - Shareholder Agreement"

  - name: ContractCode
    label: Contract Code
    description: "32 randomly generated bytes. Each Contract Code should be unique. The Contract ID will be human facing and will be the Contract Code, with a checksum, encoded in base58 and prefixed by 'CON'. Contract ID = CON + base58(ContractCode + checksum).  Eg. Contract ID = 'CON18RDoKK7Ed5zid2FkKVy7q3rULr4tgfjr4'"
    type: ContractCode
    example: "0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20"
    notes:

  - name: BodyOfAgreementType
    label: Body of Agreement Type
    description: "1 - SHA-256 Hash, 2 - Tokenized Body of Agreement Format"
    type: uint
    size: 1
    example: "1"
    notes: "Body of Agreement - Amendments can be restricted to a vote."
    intValues:
      - 1
      - 2

  - name: BodyOfAgreement
    label: Body of Agreement
    description: "SHA-256 hash of the body of the agreement (full contract in pdf format or the like) or the full terms and conditions of an agreement in the Tokenized Body of Agreement format.  This is specific to the smart contract and relevant Assets.  Legal and technical information."
    type: varbin
    # varbin size is number of bytes to serialize the size of the data
    size: 4
    example: "0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20"

  - name: ContractType
    label: Contract Type
    description: "Describes the purpose of the contract."
    type: varchar
    # varchar size is number of bytes to serialize the size of the value
    size: 1
    example: "Non-Disclosure Agreement"

  - name: SupportingDocs
    label: Supporting Documentation
    description: "Supporting documents that are important to the contract."
    type: Document[]

  - name: ContractRevision
    label: Contract Revision
    description: "Counter 0 to (2^32)-1"
    type: uint
    size: 4
    example: "0"

  - name: GoverningLaw
    label: Governing Law
    description: "5 Letter Code to identify which governing law the contract will adhere to.  Disputes are to be settled by this law in the jurisdiction specified below. Private dispute resolution organizations can be used as well.  A custom code just needs to be defined."
    type: fixedchar
    size: 5
    example: "USA"

  - name: Jurisdiction
    label: Jurisdiction
    description: "Legal proceedings/arbitration will take place using the specified Governing Law in this location."
    type: fixedchar
    size: 5
    example: "US-CA"

  - name: EffectiveDate
    label: Effective Date
    description: "Start date of the contract."
    type: Timestamp
    example: "Wed May 09 2018 00:00:00 GMT+1000 (AEST)"

  - name: ContractExpiration
    label: Contract Expiration
    description: "All actions related to the contract will cease to work after this timestamp. The smart contract will stop running.  This will allow many token use cases to be able to calculate smart contract running costs. Eg. an issuer is creating tickets for an event on the 5th of June 2018.  The smart contract will facilitate exchange and send transactions up until the 6th of June.  Wallets can use this to forget tokens that are no longer valid - or at least store them in an 'Expired' folder."
    type: Timestamp
    example: "Wed May 09 2018 00:00:00 GMT+1000 (AEST)"

  - name: ContractURI
    label: Contract URI
    description: "Length 0-255 bytes. Points to an information page that also has a copy of the Contract.  Anyone can go to the website to have a look at the price/token, information about the issuer (company), information about the Asset, legal information, etc.  There will also be a way for token owners to vote on this page and contact details with the issuer/tokenized companies. Could be a IPv6/IPv4, or txn-id for on chain information or even a public address (DNS)."
    type: varchar
    # varchar size is number of bytes to serialize the size of the value
    size: 1
    example: "https://tokenized.com/Contract/3qeoSCg7JmfSnJesJFojj"

  - name: PrevRevTxID
    label: PrevRevTxID
    description: "The Tx-ID of the previous contract revision."
    type: TxId
    example: "331951dc89e46f6ec81740a53519eef8929c8ac5887127ea019646f85748d06a"

  - name: Entities
    label: Entities
    type: Entity[]
    description: "A list of legal entities associated with this contract."
